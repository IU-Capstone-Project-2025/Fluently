package handlers

import (
	"context"
	"fmt"

	"go.uber.org/zap"
	tele "gopkg.in/telebot.v3"

	"telegram-bot/internal/bot/fsm"
)

// HandleStatsCommand handles the /stats command
func (s *HandlerService) HandleStatsCommand(ctx context.Context, c tele.Context, userID int64, currentState fsm.UserState) error {
	// Get user progress
	userProgress, err := s.GetUserProgress(ctx, userID)
	if err != nil {
		s.logger.Error("Failed to get user progress", zap.Error(err))
		return err
	}

	// Create stats message
	statsText := fmt.Sprintf(
		"üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—É—á–µ–Ω–∏—è*\n\n"+
			"üî§ –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: *%s*\n"+
			"üìö –°–ª–æ–≤ –≤ –¥–µ–Ω—å: *%d*\n"+
			"üî• –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è: *%d –¥–Ω–µ–π*\n"+
			"üìñ –í—Å–µ–≥–æ —Å–ª–æ–≤ –∏–∑—É—á–µ–Ω–æ: *%d*\n"+
			"üéØ –£—Ä–æ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: *%d*\n"+
			"‚è± –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è: *%d –º–∏–Ω—É—Ç*\n",
		userProgress.CEFRLevel,
		userProgress.WordsPerDay,
		1,   // streak days - placeholder
		97,  // total words - placeholder
		7,   // lessons completed - placeholder
		144, // total time - placeholder
	)

	// Create back button
	keyboard := &tele.ReplyMarkup{
		InlineKeyboard: [][]tele.InlineButton{
			{{Text: "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", Data: "menu:main"}},
		},
	}

	return c.Send(statsText, &tele.SendOptions{ParseMode: tele.ModeMarkdown}, keyboard)
}
