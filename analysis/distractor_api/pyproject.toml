[tool.poetry]
name = "fluently-analysis"
version = "1.0.0"
description = "Text analysis and distractor generation API for Fluently language learning platform"
authors = ["Fluently Team"]
readme = "README.md"
packages = [
    {include = "distractor_api"},
    {include = "bert"}
]

[tool.poetry.dependencies]
python = "^3.11"
# FastAPI and server dependencies
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
python-multipart = "^0.0.6"

# ML and NLP dependencies
transformers = "^4.36.0"
torch = "^2.1.0"
tokenizers = "^0.15.0"
numpy = "^1.24.4"

# Data analysis dependencies
pandas = "^2.1.0"
nltk = "^3.8.1"
scikit-learn = "^1.3.0"

# Web scraping and automation (from notebook)
selenium = "^4.15.0"
undetected-chromedriver = "^3.5.0"
requests = "^2.31.0"

# Jupyter notebook support
jupyter = "^1.0.0"
ipykernel = "^6.25.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.25.0"
black = "^23.9.1"
ruff = "^0.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"

[tool.poetry.scripts]
start-distractor-api = "distractor_api.main:main"
run-analysis = "distractor_api.run:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | build
  | dist
  | Data
)/
'''

[tool.ruff]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]  # Line too long (handled by black)
fixable = ["ALL"]
target-version = "py311"
line-length = 88
exclude = ["Data", "*.ipynb"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
exclude = ["Data/", "*.ipynb"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"